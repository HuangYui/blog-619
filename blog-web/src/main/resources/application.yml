spring:
  application:
    name: blog-web
  output:
    ansi:
      enabled: always
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
  main:
    allow-bean-definition-overriding: true
  #  profiles:
#    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/gzlover?useUnicode=true&characterEncoding=utf8&autoReconnect=true&failOverReadOnly=false&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
#  thymeleaf:
#    #定位模板的目录，即index文件目录
#    prefix: classpath:/static/portal/
#    #给返回的页面添加后缀名
#    suffix: .html
#    servlet:
#      content-type: text/html
#    mode: HTML
#    cache: false
#    encoding: utf-8


server:
  tomcat:
    uri-encoding: UTF-8
    max-connections: 500
    min-spare-threads: 25
    max-threads: 300
    accept-count: 200
  port: 80

mybatis:
  mapper-locations: classpath:com/hy/user/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql


logging:
  level:
    com.hy.feign.TestFeignClient: debug
    root: info
    org:
      springframework:
        security: DEBUG
        web: ERROR
      hibernate: DEBUG
      apache:
        commons:
          dbcp2: DEBUG
      mybatis: DEBUG
  pattern:
    console: '%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n'

# feign的配置
feign:
  client:
    config:
      gzlover-web-server:
        connectTimeout: 5000  # 相当于Request.Optionsn 连接超时时间
        readTimeout: 5000     # 相当于Request.Options 读取超时时间
        loggerLevel: full     # 配置Feign的日志级别，相当于代码配置方式中的Logger
#        errorDecoder: com.example.SimpleErrorDecoder  # Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
#        retryer: com.example.SimpleRetryer  # 配置重试，相当于代码配置方式中的Retryer
#        requestInterceptors: # 配置拦截器，相当于代码配置方式中的RequestInterceptor
#          - com.example.FooRequestInterceptor
#          - com.example.BarRequestInterceptor
        # 是否对404错误解码
        decode404: false
#        encode: com.example.SimpleEncoder
#        decoder: com.example.SimpleDecoder
#        contract: com.example.SimpleContract
  httpclient:
    # 让feign使用apache httpclient作请求
    enabled: true
    # feign的最大连接数
    max-connections: 200
    # feign单个路径的最大连接数
    max-connections-per-route: 50
  compression:
    request:
      enabled: true # 开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限